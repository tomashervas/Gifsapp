{"version":3,"sources":["components/AddCategory.js","components/GifItem.js","Gifsapp.js","index.js"],"names":["AddCategory","setCat","useState","inputValue","setValue","onSubmit","e","preventDefault","cats","type","value","onChange","target","GifItem","cat","imgs","setImg","offset","Math","floor","random","useEffect","getGifs","a","console","log","url","encodeURI","fetch","resp","json","data","length","gifs","map","gif","id","titulo","title","images","fixed_width","className","img","src","alt","Gifsapp","c","ReactDOM","render","document","getElementById"],"mappings":"+KAEaA,EAAc,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAEzB,EAA+BC,mBAAS,IAAxC,mBAAOC,EAAP,KAAmBC,EAAnB,KAUA,OACI,sBAAMC,SALW,SAACC,GAClBA,EAAEC,iBACFN,GAAO,SAAAO,GAAI,OAAKL,GAAL,mBAAoBK,QAG/B,SACI,uBAAOC,KAAK,OAAOC,MAAOP,EAAYQ,SAV3B,SAACL,GAChBF,EAASE,EAAEM,OAAOF,a,uBCLbG,EAAU,SAAC,GAAW,IAAVC,EAAS,EAATA,IAErB,EAAuBZ,mBAAS,IAAhC,mBAAOa,EAAP,KAAaC,EAAb,KACIC,EAASC,KAAKC,MAAoB,IAAdD,KAAKE,UAE7BC,qBAAU,WACNC,EAAQR,KACT,CAACA,IAEJ,IAAMQ,EAAO,uCAAG,WAAOR,GAAP,uBAAAS,EAAA,6DAEZC,QAAQC,IAAIR,GACNS,EAHM,iDAG0CC,UAAUb,GAHpD,2BAG2EG,EAH3E,sDAIOW,MAAOF,GAJd,cAING,EAJM,gBAKSA,EAAKC,OALd,sBAKLC,EALK,EAKLA,MACCC,OAAS,GANL,iBAOFC,EAAOF,EAAKG,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAGD,EAAIC,GACPC,OAAQF,EAAIG,MACZZ,IAAKS,EAAII,OAAOC,YAAYd,QAIpCF,QAAQC,IAAIM,GACZP,QAAQC,IAAIQ,GACZjB,EAAOiB,GAjBC,2BAoBI,IAAThB,EApBK,mDAqBRA,EAAS,EACTK,EAAQR,GAtBA,4CAAH,sDA0Bb,OACI,gCACI,6BAAKA,IACL,oBAAI2B,UAAU,YAAd,SACK1B,EAAKmB,KAAI,SAAAQ,GACN,OACI,qBAAkBD,UAAU,yCAA5B,SACI,+BACI,4BAAIC,EAAIL,SACR,qBAAKI,UAAU,SAAf,SACI,qBAAKE,IAAKD,EAAIhB,IAAKkB,IAAKF,EAAIL,eAJ9BK,EAAIN,aCtCzBS,EAAU,WAGnB,MAAuB3C,mBAAS,CAAC,mBAAjC,mBAAOM,EAAP,KAAaP,EAAb,KAKA,OACI,sBAAKwC,UAAU,aAAf,UACI,yCACA,cAAC,EAAD,CAAaxC,OAAQA,IAEjB,6BACKO,EAAK0B,KAAI,SAAAY,GAAC,OAAG,cAAC,EAAD,CAAiBhC,IAAKgC,GAARA,Y,MCdhDC,IAASC,OACH,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.18ffbda3.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport const AddCategory = ({setCat}) => {\r\n\r\n    const [inputValue, setValue] = useState('');\r\n\r\n    const handleText = (e)=>{\r\n        setValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        setCat(cats => [inputValue, ...cats]);\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" value={inputValue} onChange={handleText}></input>\r\n        </form>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nexport const GifItem = ({cat}) => {\r\n\r\n    const [imgs, setImg] = useState([]);\r\n    let offset = Math.floor(Math.random()*1000);\r\n\r\n    useEffect(()=>{\r\n        getGifs(cat);\r\n    }, [cat]);\r\n\r\n    const getGifs = async (cat)=>{\r\n        \r\n        console.log(offset);\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(cat)}&limit=8&offset=${offset}&api_key=gRkD5kUUP5gG1YZtyn4jnGoBb25aVn0L`;\r\n        const resp = await fetch( url );\r\n        const {data} = await resp.json();\r\n        if(data.length > 0) {\r\n            const gifs = data.map(gif=>{\r\n                return {\r\n                    id:gif.id,\r\n                    titulo: gif.title,\r\n                    url: gif.images.fixed_width.url\r\n                }\r\n            })\r\n\r\n            console.log(data)\r\n            console.log(gifs);\r\n            setImg(gifs);\r\n\r\n        } else {\r\n            if(offset===0) return;\r\n            offset = 0;\r\n            getGifs(cat)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>{cat}</h3>\r\n            <ul className=\"listaGifs\">\r\n                {imgs.map(img=> {\r\n                    return (\r\n                        <div key={img.id} className=\"card animate__animated animate__fadeIn\">\r\n                            <li>\r\n                                <p>{img.titulo}</p>\r\n                                <div className=\"imagen\">\r\n                                    <img src={img.url} alt={img.titulo}></img>\r\n                                </div>\r\n                            </li>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifItem } from './components/GifItem';\r\n\r\n\r\nexport const Gifsapp = () => {\r\n\r\n    //const cats = ['Humor', 'Miedo', 'Románticos'];\r\n    const [cats, setCat] = useState(['Rick and Morty']);\r\n    /* const addCat = () => {\r\n        setCat([...cats,'Bromas'] );\r\n    } */\r\n\r\n    return (\r\n        <div className=\"contenedor\">\r\n            <h2>GIFSAPP</h2>\r\n            <AddCategory setCat={setCat}/>\r\n        \r\n                <ul>\r\n                    {cats.map(c=> <GifItem key={c} cat={c}/>)}\r\n                </ul>\r\n\r\n            {/* <button onClick={addCat}>Añadir categoría</button> */}\r\n\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Gifsapp } from './Gifsapp';\nimport './index.css';\n\nReactDOM.render(\n      <Gifsapp />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}